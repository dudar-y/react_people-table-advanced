{"version":3,"sources":["helpers/getLinkClass.ts","components/Navbar.tsx","App.tsx","pages/ErrorPage.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","types/SexFilter.ts","utils/searchHelper.ts","components/PeopleFilters.tsx","components/PersonLink/PersonLink.tsx","components/TableHead/TableHead.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","helpers/getParents.ts","helpers/getFilteredPeople.ts","helpers/getSortedPeople.ts","index.tsx","Root.tsx"],"names":["getLinkClass","isActive","classNames","Navbar","className","role","to","App","ErrorPage","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","SexFilter","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","PeopleFilters","useSearchParams","searchParams","setSearchParams","sex","get","centuries","getAll","query","getFilterLinkTo","search","cn","All","Male","Female","type","placeholder","onChange","e","target","map","century","includes","filter","cent","length","PersonLink","person","name","born","died","fatherName","father","motherName","mother","slug","isPersonSelected","useParams","personSlug","isWomen","tableHeaderCellsData","TableHead","sort","order","cellData","sortValue","cellTitle","toUpperCase","slice","PeopleTable","people","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","getPeople","peopleFromServer","newPerson","find","getParents","catch","finally","isAnyPerson","filteredPeople","peopleData","data","sortedBySex","arr","p","filterBySex","centuryBorn","Math","ceil","toLowerCase","getFilteredPeople","sortedPeople","sortData","a","b","localeCompare","getSortedPeople","isShow","peopleList","noPeopleNotification","noPeopleFound","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.c2147be3.chunk.js","sourcesContent":["import classNames from 'classnames';\n\nexport const getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n","import { NavLink } from 'react-router-dom';\nimport { getLinkClass } from '../helpers/getLinkClass';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ErrorPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export enum SexFilter {\n  Male = 'm',\n  Female = 'f',\n  All = '',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SexFilter } from '../types/SexFilter';\nimport { getSearchWith } from '../utils/searchHelper';\n\nexport const PeopleFilters: React.FC = () => {\n  const centurysData = ['16', '17', '18', '19', '20'];\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const query = searchParams.get('query') || '';\n\n  function getFilterLinkTo(value: SexFilter) {\n    return (\n      {\n        search: getSearchWith(\n          searchParams, {\n            sex: value || null,\n          },\n        ),\n      }\n    );\n  }\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const search = getSearchWith(searchParams, {\n      query: e.target.value || null,\n    });\n\n    setSearchParams(search);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={cn({ 'is-active': sex === SexFilter.All })}\n          to={getFilterLinkTo(SexFilter.All)}\n        >\n          All\n        </Link>\n\n        <Link\n          className={cn({ 'is-active': sex === SexFilter.Male })}\n          to={getFilterLinkTo(SexFilter.Male)}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={cn({ 'is-active': sex === SexFilter.Female })}\n          to={getFilterLinkTo(SexFilter.Female)}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n            value={query}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centurysData.map(century => (\n              <Link\n                data-cy=\"century\"\n                className={\n                  cn('button mr-1',\n                    { 'is-info': centuries.includes(century) })\n                }\n                to={{\n                  search: getSearchWith(\n                    searchParams,\n                    {\n                      centuries: centuries.includes(century)\n                        ? centuries.filter(cent => century !== cent)\n                        : [...centuries, century],\n                    },\n                  ),\n                }}\n              >\n                {century}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={cn('button is-success',\n                { 'is-outlined': centuries.length })}\n              to={{\n                search: getSearchWith(\n                  searchParams,\n                  {\n                    centuries: [],\n                  },\n                ),\n              }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{ search: '' }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    born,\n    died,\n    fatherName,\n    father,\n    motherName,\n    mother,\n    sex,\n    slug,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  const isPersonSelected = personSlug === slug;\n\n  const isWomen = sex === 'f';\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': isPersonSelected })}\n    >\n      <td>\n        <Link\n          className={cn({ 'has-text-danger': isWomen })}\n          to={`../${slug}`}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      { mother && (\n        <td>\n          <Link\n            className=\"has-text-danger\"\n            to={`../${mother.slug}`}\n          >\n            {mother.name}\n          </Link>\n        </td>\n      )}\n\n      { !mother && motherName && (\n        <td>{motherName}</td>\n      )}\n\n      { !mother && !motherName && (\n        <td>-</td>\n      )}\n\n      { father && (\n        <td>\n          <Link\n            to={`../${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        </td>\n      )}\n\n      { !father && fatherName && (\n        <td>{fatherName}</td>\n      )}\n\n      { !father && !fatherName && (\n        <td>-</td>\n      )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { SortParams } from '../../types/SortParams';\n\nconst tableHeaderCellsData: SortParams[] = ['name', 'sex', 'born', 'died'];\n\nexport const TableHead: React.FC = () => {\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const getSearchLink = (\n    sortValue: SortParams,\n  ) => {\n    if (sort && sortValue !== sort) {\n      return {\n        search: getSearchWith(\n          searchParams,\n          {\n            sort: sortValue,\n          },\n        ),\n      };\n    }\n\n    if (!sort) {\n      return {\n        search: getSearchWith(\n          searchParams,\n          {\n            sort: sortValue,\n          },\n        ),\n      };\n    }\n\n    if (sort && !order) {\n      return {\n        search: getSearchWith(\n          searchParams,\n          {\n            sort: sortValue,\n            order: 'desc',\n          },\n        ),\n      };\n    }\n\n    return {\n      search: getSearchWith(\n        searchParams,\n        {\n          sort: null,\n          order: null,\n        },\n      ),\n    };\n  };\n\n  return (\n    <thead>\n      <tr>\n        {tableHeaderCellsData.map(cellData => {\n          const cellTitle = cellData[0].toUpperCase() + cellData.slice(1);\n\n          return (\n            <th key={cellData}>\n              <span className=\"is-flex is-flex-wrap-nowrap\">\n                {cellTitle}\n                <Link to={getSearchLink(cellData)}>\n                  <span className=\"icon\">\n                    <i className={cn(\n                      {\n                        'fas fa-sort-up': sort === cellData && !order,\n                        'fas fa-sort-down': sort === cellData && order,\n                        'fas fa-sort': sort !== cellData,\n                      },\n                    )}\n                    />\n                  </span>\n                </Link>\n              </span>\n            </th>\n          );\n        })}\n\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { TableHead } from '../TableHead/TableHead';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      {people.length > 0 && <TableHead />}\n      <tbody>\n        {people.map(person => (\n          <PersonLink person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable';\nimport { getParents } from '../helpers/getParents';\nimport { getFilteredPeople } from '../helpers/getFilteredPeople';\nimport { Person } from '../types';\nimport { getSortedPeople } from '../helpers/getSortedPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex') || '';\n  const centuries = searchParams.getAll('centuries') || [];\n  const query = searchParams.get('query') || '';\n\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(getParents(peopleFromServer));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isAnyPerson = people.length > 0;\n  const filteredPeople = getFilteredPeople(people, { sex, centuries, query });\n  const sortedPeople = getSortedPeople(filteredPeople, { sort, order });\n\n  const isShow = {\n    peopleList: !isLoading && !isError && isAnyPerson,\n    noPeopleNotification: !isAnyPerson && !isLoading && !isError,\n    noPeopleFound: !isLoading && !isError && !sortedPeople.length,\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isShow.noPeopleNotification && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {isShow.noPeopleFound && (\n                <p>There are no people matching the current search criteria</p>\n              )}\n\n              {isShow.peopleList\n                && <PeopleTable people={sortedPeople} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function getParents(people: Person[]) {\n  const peopleWithParents = people.map((person) => {\n    const newPerson = { ...person };\n\n    newPerson.father = people\n      .find(father => father.name === newPerson.fatherName);\n\n    newPerson.mother = people\n      .find(mother => mother.name === newPerson.motherName);\n\n    return newPerson;\n  });\n\n  return peopleWithParents;\n}\n","import { Person } from '../types';\nimport { SexFilter } from '../types/SexFilter';\n\ntype SearchData = {\n  sex: SexFilter | string,\n  centuries: string[],\n  query: string,\n};\n\nexport function getFilteredPeople(\n  peopleData: Person[],\n  data: SearchData,\n) {\n  const { sex, centuries, query } = data;\n\n  const filterBySex = (arr: Person[]) => {\n    switch (sex) {\n      case SexFilter.Female:\n        return arr.filter(p => p.sex === SexFilter.Female);\n\n      case SexFilter.Male:\n        return arr.filter(p => p.sex === SexFilter.Male);\n\n      default:\n        return arr;\n    }\n  };\n\n  const filterByCenturies = (arr: Person[]) => {\n    return arr.filter(p => {\n      const centuryBorn = (Math.ceil(p.born / 100)).toString();\n\n      return centuries.includes(centuryBorn);\n    });\n  };\n\n  const filterByQuery = (arr: Person[]) => {\n    return arr.filter(p => p.name.toLowerCase()\n      .includes(query.toLowerCase()));\n  };\n\n  const sortedBySex = filterBySex(peopleData);\n  const sortedByCenturies = centuries.length\n    ? filterByCenturies(sortedBySex)\n    : sortedBySex;\n\n  return filterByQuery(sortedByCenturies);\n}\n","import { Person } from '../types';\n\ntype SortData = {\n  sort: string;\n  order: string;\n};\n\nexport function getSortedPeople(\n  people: Person[],\n  sortData: SortData,\n) {\n  const { sort, order } = sortData;\n\n  const callBack = (a: Person, b: Person) => {\n    if (sort === 'name' || sort === 'sex') {\n      return order\n        ? b[sort].localeCompare(a[sort])\n        : a[sort].localeCompare(b[sort]);\n    }\n\n    if (sort === 'born' || sort === 'died') {\n      return order\n        ? b[sort] - (a[sort])\n        : a[sort] - (b[sort]);\n    }\n\n    return 0;\n  };\n\n  return people.sort(callBack);\n}\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    Root(),\n  );\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { ErrorPage } from './pages/ErrorPage';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\">\n          <Route path=\":personSlug?\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n"],"sourceRoot":""}